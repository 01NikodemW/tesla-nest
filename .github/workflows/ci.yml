name: CI

on:
  push:
    branches: [main, master, develop, feature/**]
  pull_request:
    branches: [main, master, develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: test
      DATABASE_HOST: localhost
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: tesla_nest_ci
      DATABASE_SYNC: 'true'
      DATABASE_AUTOLOAD: 'true'
      JWT_SECRET: test_jwt_secret
      # Add other envs as needed for configService

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tesla_nest_ci
        ports:
          - 5432:5432
        # Ensure DB is up before app starts
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Run unit tests
        run: npm run test -- --coverage

      - name: Run e2e tests
        run: npm run test:e2e

      - name: Upload test coverage
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Upload build output
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
